==================== Changes in man-pages-3.13 ====================

Released: ????-??-??, Bucaramanga


Contributors
------------

The following people contributed notes, ideas, or patches that have
been incorporated in changes in this release:

Bert Wesarg <bert.wesarg@googlemail.com>
Karsten Weiss <knweiss@gmail.com>
Lefteris Dimitroulakis <edimitro@tee.gr>
Olaf van der Spek <olafvdspek@gmail.com>
Sam Varshavchik <mrsam@courier-mta.com>
Török Edwin <edwintorok@gmail.com>
Ulrich Mueller <ulm@gentoo.org>
Valdis Kletnieks <Valdis.Kletnieks@vt.edu>

Apologies if I missed anyone!


New and rewritten pages
-----------------------

pthread_attr_setaffinity_np.3
    Michael Kerrisk
        New page for pthread_attr_setaffinity_np(3) and
        pthread_attr_getaffinity_np(3)

pthread_attr_setschedparam.3
    Michael Kerrisk
        New page for pthread_attr_setschedparam(3) and
        pthread_attr_getschedparam(3)

pthread_attr_setschedpolicy.3
    Michael Kerrisk
        New page for pthread_attr_setschedpolicy(3) and
        pthread_attr_getschedpolicy(3)

pthread_setaffinity_np.3
    Michael Kerrisk
        New page for pthread_setaffinity_np(3) and pthread_getaffinity_np(3)

pthread_setschedparam.3
    Michael Kerrisk
        New page for pthread_setschedparam(3) and pthread_getschedparam(3)

pthread_setschedprio.3
    Michael Kerrisk
        New page for pthread_setschedprio(3)


New and changed links
---------------------

pthread_attr_getaffinity_np.3
    Michael Kerrisk
        New link to new pthread_attr_setaffinity_np.3

pthread_attr_getschedparam.3
    Michael Kerrisk
        New link to new pthread_attr_setschedparam.3

pthread_attr_getschedpolicy.3
    Michael Kerrisk
        New link to new pthread_attr_setschedpolicy.3

pthread_getaffinity_np.3
    Michael Kerrisk
        New link to new pthread_setaffinity_np.3

pthread_getschedparam.3
    Michael Kerrisk
        New link to new pthread_setschedparam.3


Global changes
--------------

pthread_attr_setaffinity_np.3
pthread_getattr_np.3
pthread_setaffinity_np.3
pthread_tryjoin_np.3
    Michael Kerrisk
        Explain _np suffix
            Add text to CONFORMING TO explaining that the "_np"
            suffix is because these functions are non-portable.


Changes to individual pages
---------------------------

sched_setaffinity.2
    Michael Kerrisk
        SEE ALSO: add sched_getcpu(3)

sched_setaffinity.2
    Michael Kerrisk
        SEE ALSO: Add pthread_setaffinity_np(3)

sched_setaffinity.2
    Michael Kerrisk
        Clarify EINVAL error for cpusetsize < kernel mask size
            For sched_setaffinity(), the EINVAL error that occurs
            if 'cpusetsize' is smaller than the kernel CPU set size only
            occurs with kernels before 2.6.9.

vfork.2
    Michael Kerrisk
        Child holds parent's memory until execve() or *termination*
            The page was phrased in a few places to describe the child as
            holding the parent's memory until the child does an execve(2)
            or an _exit(2).  The latter case should really be the more
            general process termination (i.e., either _exit(2) or abnormal
            termination).

clock_getres.3
    Michael Kerrisk
        CLOCK_PROCESS_CPUTIME_ID and CLOCK_THREAD_CPUTIME_ID not setabble
            According to POSIX.1-2001, the CLOCK_PROCESS_CPUTIME_ID and
            CLOCK_THREAD_CPUTIME_ID clocks should be settable, but
            currently they are not.

pthread_attr_setstacksize.3
    Michael Kerrisk, after a report by Karsten Weiss
        EINVAL occurs on some systems if stacksize != page-size
            On MacOS X at least, pthread_attr_setstacksize(3) can fail
            with EINVAL if 'stacksize' is not a multiple of the system
            page size.  Best to mention this so as to aid people writing
            portable programs.

pthread_create.3
    Karsten Weiss
        Fix bug in EXAMPLE program
            The calloc() line should read like this instead:

                tinfo = calloc(num_threads, sizeof(struct thread_info));

pthread_exit.3
    Michael Kerrisk
        BUGS: thread group with a dead leader and stop signals
            Document the bug that can occur when a stop signal
            is sent to a thread group whose leader has terminated.
            http://thread.gmane.org/gmane.linux.kernel/611611
            http://marc.info/?l=linux-kernel&m=122525468300823&w=2

resolver.3
    Michael Kerrisk
        Fix prototype of dn_expand()
            The 4th argument is "char *", not "unsigned char *".
            http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=504708

epoll.7
    Michael Kerrisk
        Fix error handling after accept() in example code
            Simply continuing after an error is in most cases wrong,
            and can lead to infinite loops (e.g., for EMFILE).
            So handle an error by terminating.
            http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=504202

epoll.7
    Michael Kerrisk
        Add error handling for epoll_wait() call in example code

epoll.7
    Michael Kerrisk
        Improve example code
            Fill in some gaps in example code (variable declarations,
            adding listening socket to epoll set).
            Give variables more meaningful names.
            Other minor changes.
            http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=504202

iso_8859-7.7
    Lefteris Dimitroulakis
        Add characters for Drachma and Greek Ypogegrammeni
            Lines for these two characters were added in the previous patch,
            but the actual characters were not included in the 4th column
            of the table.  This fixes that.

pthreads.7
    Michael Kerrisk
        Add a section describing thread IDs
            In particular, note that in each pthreads function that takes
            a thread ID argument, that ID by definition refers to a thread
            in the same process as the caller.
